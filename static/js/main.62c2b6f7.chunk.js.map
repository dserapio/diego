{"version":3,"sources":["img/left-arrow.svg","img/right-arrow.svg","img/truck.gif","img/trash.gif","img/gold.gif","img/sun-solid.svg","img/moon-regular.svg","img/e-stewards.png","serviceWorker.js","contexts/ThemeContext.js","contexts/NavContext.js","components/buttons/Burger.js","components/slider/SliderContent.js","components/slider/Slide.js","components/slider/Arrow.js","components/slider/Dots.js","components/slider/Slider.js","components/utils/Styles.js","components/pages/Info.js","components/utils/Transitions.js","components/utils/UnitConvert.js","components/calc/Input.js","components/calc/Results.js","components/calc/About.js","components/pages/Calculator.js","components/Pages.js","components/pages/Home.js","components/pages/FindRecycler.js","components/pages/Error.js","components/Navigation.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","lightTheme","name","main","mainAlt","off","offAlt","darkTheme","toggleTheme","theme","Error","ThemeContext","React","createContext","closedArea","innerWidth","openedArea","menu","clientWidth","navChange","navInfo","action","type","hide","area","navStart","NavContext","Burger","active","onClick","color","BurgerCSS","css","className","map","i","key","SliderContent","props","translate","transition","width","children","Slide","content","Arrow","direction","handleClick","src","rightArrow","alt","leftArrow","Dot","Dots","slides","activeSlide","slide","getWidth","SliderCSS","Slider","autoPlay","firstSlide","secondSlide","lastSlide","length","useState","_slides","updating","signal","state","setState","autoPlayRef","useRef","transitionRef","resizeRef","handleResize","smoothTransition","newSlides","slice","nextSlide","prevSlide","useEffect","current","mounted","play","interval","setInterval","transitionEnd","addEventListener","e","target","includes","clearInterval","onResize","removeEventListener","useContext","swipes","useSwipeable","onSwipedLeft","initial","onSwipedRight","_slide","isMobile","ContentWrap","Information","href","FadeWrap","transProps","divRef","CSSTransition","nodeRef","timeout","classNames","unmountOnExit","ref","TransWrap","divClass","TransSpan","spanRef","SwitchTransition","convertTable","convertObj","unit","convert","parseTarget","loc","indexOf","substring","Input","inputs","setInputs","toResults","weight","swapWeight","toAbout","tolbs","tokg","valid","setValid","avg","setAvg","boxes","setBoxes","store","setStore","fieldFocus","field","attr","fieldVal","value","default","fieldBlur","handleChange","num","Number","isInteger","checkInt","box","disabled","id","onSubmit","event","preventDefault","allBlank","fieldNames","every","amount","allWeights","reduce","res","noValidate","onChange","onFocus","onBlur","form","MaterialField","textProps","weightVal","boxVal","show","str","last","concat","pluralize","subfield","TextField","input","in","style","borderColor","prettyNum","fracDigits","toLocaleString","undefined","maximumFractionDigits","fetchGold","a","fetch","then","response","text","data","parse","DOMParser","doc","parseFromString","table","getElementsByTagName","filter","tBodies","item","innerText","price","rows","row","cells","console","log","parseFloat","replace","currPieSize","height","innerHeight","Results","toBack","values","gold","setGold","pieSize","setSize","catch","finally","resizePie","colors","pieData","Object","entries","aggregates","index","label","ghg","inTotal","trucks","emissionData","diverts","divert","LaNyTrips","co2LANY","backgroundColor","truck","trash","goldBars","Gold","margin","top","right","bottom","left","scheme","startAngle","endAngle","innerRadius","padAngle","cornerRadius","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","slicesLabelsSkipAngle","animate","motionStiffness","motionDamping","sortByValue","legends","anchor","translateX","itemWidth","itemHeight","itemsSpacing","itemTextColor","symbolSize","symbolShape","tooltip","toFixed","container","background","memo","calc","recycle","title","fieldStarts","obj","setField","aObj","findTotals","weightAmount","inTotals","outTotals","totals","materials","material","forEach","materialAmnt","weightYield","emission","distance","paths","Comp","trans","rel","about","enter","flags","setFlags","setUnit","useReducer","results","setResults","defCheck","onAbout","accumObj","fieldObj","defaults","useLoadScript","googleMapsApiKey","isLoaded","loadError","selected","setSelected","onMap","onMapLoad","useCallback","mapContainerClassName","zoom","center","lat","lng","onLoad","options","clusterer","locationData","RecycleCenter","position","icon","url","scaledSize","google","maps","Size","onCloseClick","subname","phone","directions","urls","keys","path","siteName","pathNames","r","toUpperCase","f","withRouter","linkNames","useMemo","links","urlPaths","matchPath","pathname","exact","matchComp","document","Navigation","forwardRef","setNav","swapTheme","linkInfos","names","navRef","menuRef","closeRef","classList","add","remove","scrollCheck","pageYOffset","documentElement","scrollTop","menuClick","contains","isDark","isLight","to","logo","sunLogo","moonLogo","App","setNavBase","listRef","deltaX","currX","onSwiping","dir","cancelable","body","Provider","homepage","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.62c2b6f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.34a4f31c.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.5e5b72cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/truck.dc7c3322.gif\";","module.exports = __webpack_public_path__ + \"static/media/trash.8e52305f.gif\";","module.exports = __webpack_public_path__ + \"static/media/gold.7fdab98e.gif\";","module.exports = __webpack_public_path__ + \"static/media/sun-solid.6e1d81ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon-regular.2eae935f.svg\";","module.exports = __webpack_public_path__ + \"static/media/e-stewards.dfd5258e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\n\nexport const lightTheme = {\n    name: 'light',\n    main: 'white',\n    mainAlt: '#f3f0ed',\n    off: 'black',\n    offAlt: '#909090'\n};\n\nexport const darkTheme = {\n    name: 'dark',\n    main: '#2b2a2a',\n    mainAlt: '#36383d',\n    off: 'lightgray',\n    offAlt: '#909090'\n}\n\n/**\n * Takes in a previous theme, and returns\n * a new theme, swapping between the light and\n * dark theme; this function is meant to be used\n * with the useReducer hook, but the second arg\n * is not used, and is ignored\n * @param {Object} theme the previous theme state\n * @param {string} theme.name\n * @param {string} theme.main\n * @param {string} theme.mainAlt\n * @param {string} theme.off\n * @param {string} theme.offAlt\n */\nexport const toggleTheme = (theme) => {\n    switch(theme.name) {\n        case 'light':\n            return darkTheme;\n        case 'dark':\n            return lightTheme;\n        default:\n            throw new Error();\n    }\n}\n\n/**\n * Specifies the primary and secondary colors to be\n * used for styling components\n */\nconst ThemeContext = React.createContext(lightTheme);\n\nexport default ThemeContext;","import React from 'react';\n\n/**\n * min x value for open navigation to trigger\n */\nconst closedArea = () =>\n   window.innerWidth * 0.9;\n\n/**\n * min x value of the opened navigation, requires\n * a reference to the navigation menu element\n * @param {HTMLDivElement} menu\n */\nconst openedArea = (menu) =>\n   window.innerWidth - menu.clientWidth;\n\n\n/**\n * returns a new NavContext state based the values\n * in the action parameter; meant to be used with \n * the useReducer react hook\n * @param {Object} navInfo the previous nav state\n * @param {boolean} navInfo.hide\n * @param {number} navInfo.area\n * @param {Object} action the values on how to update the state;\n * can be open, close, or swap for the type, and menu is the \n * navigation element\n * @param {string} action.type\n * @param {HTMLDivElement} action.menu\n */\nexport const navChange = (navInfo, action) => {\n   switch(action.type) {\n      case 'open':\n         return { hide: false, area: openedArea(action.menu) };\n   \n      case 'close':\n         return { hide: true, area: closedArea() };\n   \n      case 'swap':\n         return {\n            hide: !navInfo.hide, \n            area: navInfo.hide \n               ? closedArea()\n               : openedArea(action.menu)\n         };\n   \n      default:\n         throw new Error();\n   }\n   };\n\n/**\n * starting NavContext factory object\n * @param {boolean} hide \n */\nexport const navStart = (hide) => (\n   { hide, area: closedArea() }\n);\n\n/**\n * Shows the current state of the navigation menu, mostly in \n * context of mobile views; desktop navigation is always\n * opened\n */\nconst NavContext = React.createContext(navStart(false));\n\nexport default NavContext;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\n\n\nexport default function Burger({active, onClick, color}) {\n  const bars = ['bar1', 'bar2', 'bar3'];\n\n  const BurgerCSS = css`\n    .container {\n      display: inline-block;\n      cursor: pointer;\n    }\n    \n    .bar1, .bar2, .bar3 {\n      width: 5vh;\n      height: 0.6vh;\n      background-color: ${color};\n      margin: 0.75vh 1.35vh;\n      transition: 0.4s;\n    }\n    \n    /* Rotate first bar */\n    .bar1.active {\n      transform: rotate(-45deg) translate(-1.3vh, 1.15vh) ;\n    }\n    \n    /* Fade out the second bar */\n    .bar2.active {\n      opacity: 0;\n    }\n    \n    /* Rotate last bar */\n    .bar3.active {\n      transform: rotate(45deg) translate(-0.6vh, -0.55vh) ;\n    }\n  `;\n\n  return (\n    <div css={BurgerCSS}\n      className=\"container\"\n      onClick={onClick}\n    >\n      {bars.map((name, i) => (\n        <div key={name} className={`${name} ${active ? \"active\" : \"\"}`}/>\n      ))}\n    </div>\n  );\n}\n\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\n\nconst SliderContent = props => (\n  <div\n    css={css`\n      transform: translateX(-${props.translate}px);\n      transition: transform ease-out ${props.transition}s;\n      height: 100%;\n      width: ${props.width}px;\n      display: flex;\n    `}\n  >\n    {props.children}\n  </div>\n)\n\nexport default SliderContent\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\n\nconst Slide = ({ content, width }) => (\n  <div\n    css={css`\n      height: 100%;\n      width: ${width}px;\n      background-image: url('${content}');\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n    `}\n  />\n)\n\nexport default Slide\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport leftArrow from '../../img/left-arrow.svg'\nimport rightArrow from '../../img/right-arrow.svg'\n\nconst Arrow = ({ direction, handleClick }) => (\n  <div\n    onClick={handleClick}\n    css={css`\n      display: flex;\n      position: absolute;\n      top: 50%;\n      ${direction === 'right' ? `right: 25px` : `left: 25px`};\n      height: 50px;\n      width: 50px;\n      justify-content: center;\n      background: white;\n      border-radius: 50%;\n      cursor: pointer;\n      align-items: center;\n      transition: transform ease-in 0.1s;\n\n      &:hover {\n        transform: scale(1.1);\n      }\n\n      img {\n        transform: translateX(${direction === 'left' ? '-2' : '2'}px);\n\n        &:focus {\n          outline: 0;\n        }\n      }\n    `}\n  >\n    {direction === 'right' \n      ? <img src={rightArrow} alt='right-arrow'/> \n      : <img src={leftArrow} alt='left-arrow'/>}\n  </div>\n)\n\nexport default Arrow\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\n\nconst Dot = ({ active }) => (\n  <span\n    css={css`\n      padding: 10px;\n      margin-right: 5px;\n      border-radius: 50%;\n      background: ${active ? 'yellowgreen' : 'silver'};\n    `}\n  />\n)\n\nconst Dots = ({ slides, activeSlide }) => (\n  <div\n    css={css`\n      position: absolute;\n      bottom: 25px;\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `}\n  >\n    {slides.map((slide, i) => (\n      <Dot key={slide} active={activeSlide === i} />\n    ))}\n  </div>\n)\n\nexport default Dots\n","/** @jsx jsx */\nimport { useState, useEffect, useRef, useContext } from 'react'\nimport { css, jsx } from '@emotion/core'\nimport { useSwipeable } from 'react-swipeable'\nimport { isMobile } from 'react-device-detect';\n\nimport NavContext from '../../contexts/NavContext'\nimport SliderContent from './SliderContent'\nimport Slide from './Slide'\nimport Arrow from './Arrow'\nimport Dots from './Dots'\n\nconst getWidth = () => window.innerWidth\n\n/**\n * @function Slider\n */\nconst Slider = ({ autoPlay, slides }) => {\n  const firstSlide = slides[0]\n  const secondSlide = slides[1]\n  const lastSlide = slides[slides.length - 1]\n\n  const [state, setState] = useState({\n    activeSlide: 0,\n    translate: getWidth(),\n    transition: 0.45,\n    _slides: [lastSlide, firstSlide, secondSlide],\n    updating: false,\n    signal: false\n  })\n\n  const { \n    activeSlide, translate, _slides,\n    transition, updating, signal \n  } = state;\n\n  const autoPlayRef = useRef()\n  const transitionRef = useRef()\n  const resizeRef = useRef()\n\n\n  const handleResize = () => {\n    setState({ ...state, translate: getWidth(), transition: 0 })\n  }\n\n  const smoothTransition = () => {\n    let newSlides = []\n\n    if (activeSlide === slides.length - 1) // We're at the last slide.\n      newSlides = [slides[slides.length - 2], lastSlide, firstSlide]\n    else if (activeSlide === 0) // We're back at the first slide. Just reset to how it was on initial render\n      newSlides = [lastSlide, firstSlide, secondSlide]\n    else // Create an array of the previous last slide, and the next two slides that follow it.\n      newSlides = slides.slice(activeSlide - 1, activeSlide + 2)\n\n    setState({\n      ...state,\n      _slides: newSlides,\n      transition: 0,\n      translate: getWidth()\n    });\n  }\n\n  const nextSlide = () => {\n    if (!updating) {\n      setState({\n        ...state,\n        translate: translate + getWidth(),\n        activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1,\n        updating: true\n      })\n    }\n  }\n\n  const prevSlide = () => {\n    if (!updating) {\n      setState({\n        ...state,\n        translate: 0,\n        activeSlide: activeSlide === 0 ? slides.length - 1 : activeSlide - 1,\n        updating: true\n      })\n    }\n  }\n\n\n  useEffect(() => {\n    autoPlayRef.current = nextSlide;\n    transitionRef.current = smoothTransition;\n    resizeRef.current = handleResize;\n  })\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    const play = () => {\n      if (mounted)\n        autoPlayRef.current()\n    }\n\n    let interval = autoPlay\n      ? setInterval(play, autoPlay * 1000)\n      : null;\n\n    const smooth = e => {\n      if (mounted && e.target.className.includes('SliderContent')) {\n        transitionRef.current()\n\n        if (interval !== null) { //reset timer\n          clearInterval(interval);\n          interval = setInterval(play, autoPlay * 1000)\n        }\n      }\n    }\n\n    const resize = () => {\n      if (mounted)\n        resizeRef.current();\n    }\n\n    const transitionEnd = window.addEventListener('transitionend', smooth)\n    const onResize = window.addEventListener('resize', resize)\n    setState(state => ({...state, signal: true}));\n\n    return () => {\n      mounted = false;\n      window.removeEventListener('transitionend', transitionEnd)\n      window.removeEventListener('resize', onResize)\n\n      if (autoPlay) {\n        clearInterval(interval)\n      }\n    }\n  }, [autoPlay])\n\n  useEffect(() => {\n    setState(state => (\n      state.transition === 0\n        ? { ...state, transition: 0.45, updating: false }\n        : state\n    ))\n  }, [transition])\n\n  useEffect(() => {\n    //immediately go to next slide\n    if (signal)\n      autoPlayRef.current();\n  }, [signal]);\n\n\n  const navInfo = useContext(NavContext);\n\n  const swipeNext = ({initial}) => {\n    if (initial[0] < navInfo.area)\n      nextSlide();\n  }\n\n  const swipePrev = () => {\n    if (navInfo.hide)\n      prevSlide();\n  }\n\n  const swipes = useSwipeable({\n    onSwipedLeft: swipeNext, \n    onSwipedRight: swipePrev\n  });\n\n  return (\n    <div {...swipes} css={SliderCSS}>\n      <SliderContent\n        translate={translate}\n        transition={transition}\n        width={getWidth() * _slides.length}\n      >\n        {_slides.map((_slide, i) => (\n          <Slide width={getWidth()} key={_slide + i} content={_slide} />\n        ))}\n      </SliderContent>\n\n      { !isMobile && <div>\n        <Arrow direction=\"left\" handleClick={prevSlide} />\n        <Arrow direction=\"right\" handleClick={nextSlide} />\n      </div>}\n\n      <Dots slides={slides} activeSlide={activeSlide} />\n    </div>\n  )\n}\n\nconst SliderCSS = css`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  margin: 0 auto;\n  overflow: hidden;\n  white-space: nowrap;\n`\nexport default Slider","import React from 'react';\nimport { MobileView, BrowserView } from 'react-device-detect';\nimport '../../App.css';\n\n/**\n * Determines if content classes for the children based on\n * if viewing in the browser or mobile\n * @param {object} props\n * @param {JSX.Element} props.children\n */\nexport const ContentWrap = ({children}) => <>\n    <BrowserView>\n        <div className='content'>\n            {children}\n        </div>\n    </BrowserView>\n    <MobileView>\n        <div className='content mobile'>\n            {children}\n        </div>\n    </MobileView>\n</>;\n","import React from 'react';\nimport { ContentWrap } from '../utils/Styles';\nimport '../../App.css';\n\nconst Information = () => (\n   <ContentWrap>\n      <section className=\"main\">\n         <h1>Information</h1>\n         \n         <section>\n            <h2>General Information</h2>\n            <p>\n               80% of our collective e-waste is wasted by being left in landfills. Electronics are filled\n               with recoverable resources such as copper, gold, platinum, and steel among other metals.\n               However, electronics are packed with materials that are toxic to us and the environment.\n               Electronics are filled with lead, mercury, cadmium, and arsenic. In 2018, 1.5 billion cell\n               phones were manufactured. On average, Americans tend to keep their cell phones for about 34 months.\n               While the amount of materials is small for individual electronics they add up considering that\n               cell phones alone are in the billions. These materials are left in landfills to only plague the\n               environment and the people around.\n            </p>\n         </section>\n\n         <section>\n            <h2>Developing Countries</h2>\n            <p>\n               Most electronics are thrown away because they are broken and people aren’t sure how to fix them.\n               These electronics are being thrown away at such a high rate there aren't enough recyclers to handle\n               all the e-waste. This leads to exporting all the e-waste we can’t handle to developing countries.\n               People living in these developing countries have to go through fields of toxic e-waste looking for\n               recoverable materials. The people who live in these developing countries have to deal with all the\n               health risks that arise from our e-waste.\n            </p>\n         </section>\n\n         <section>\n            <h2>Refurbishment</h2>\n            <p>\n               Much of our generated e-waste is because we perceive these electronics as broken. A good amount of\n               e-waste that is thrown away can be fixed. There are many places online that can show you how to fix\n               your electronics. <a href=\"https://www.ifixit.com/Right-to-Repair/E-waste#\">ifixit</a> is one example\n               of showing you how to fix your broken electronics. By doing this you can help the environment and others\n               by not adding to the vast ocean of e-waste that has accumulated over the years\n            </p>\n         </section>\n      </section>\n   </ContentWrap>\n);\n\nexport default Information;","import React, { useRef } from 'react';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\nimport '../../App.css';\n\n/**\n * Wrapper to add fading animation to the children\n * @param {Object} props\n * @param {boolean} props.active\n * @param {JSX.Element} props.children\n */\nexport const FadeWrap = ({children, ...transProps} ) => {\n   const divRef = useRef(null);\n   return ( \n      <CSSTransition\n         nodeRef={divRef}\n         timeout={350}\n         classNames=\"fade\"\n         unmountOnExit\n         {...transProps}\n      >\n         <div ref={divRef} className=\"rel\">\n            {children}\n         </div>\n      </CSSTransition>\n   );\n};\n\n/**\n * Wrapper to add specified transition css animation to children\n * @param {Object} props\n * @param {string} props.divClass the class of the div wrapper for the children\n * @param {JSX.Element} props.children\n */\nexport const TransWrap = ({divClass, children, ...transProps}) => {\n   const divRef = useRef(null);\n   return (\n      <CSSTransition\n         nodeRef={divRef}\n         timeout={250}\n         unmountOnExit\n         {...transProps}\n      >\n         <div ref={divRef} className={divClass}>\n            {children}\n         </div>\n      </CSSTransition>\n   );\n};\n\nexport const TransSpan = ({children, ...transProps}) => {\n   const spanRef = useRef(null);\n   return (\n      <SwitchTransition>\n         <CSSTransition\n            key={children}\n            nodeRef={spanRef}\n            timeout={200}\n            {...transProps}\n         >\n            <span ref={spanRef}>{children}</span>\n         </CSSTransition>\n      </SwitchTransition>\n   )\n};","import React, { useState } from 'react';\nimport '../../App.css';\n\n/**the corresponding conversion from a weight to kg */\nexport const convertTable = {\n    'kg': 1,\n    'lbs': 2.20462\n};\n\n/**\n * @param {string} unit\n */\nexport const convertObj = (unit) => ({\n    name: unit,\n    convert: convertTable[unit]\n});\n\nexport default function SelectUnit(props) {\n    const [unit, setUnit] = useState(props.unit);\n\n    const handleChange = ({target}) => {\n        setUnit(target.value);\n    };\n\n    return <>\n        <span>{props.value*convertTable[unit]} {unit}</span>\n        <select value={unit} onChange={handleChange}>\n            <option value=\"kg\">kg</option>\n            <option value=\"lbs\">lbs.</option>\n        </select>\n    </>;\n}","import React, { useState, useContext } from 'react';\nimport ThemeContext from '../../contexts/ThemeContext';\nimport { TransWrap, TransSpan } from '../utils/Transitions';\nimport { fieldNames } from '../pages/Calculator';\nimport '../../App.css';\n\n\nconst checkInt = (value) => {\n   const num = +value; //cast to num\n   return Number.isInteger(num) && num>=0;\n};\n\nconst checkPos = (value) => {\n   const num = +value;\n   return num>=0;\n};\n\nconst parseTarget = (target) => {\n   const name = target.name;\n   const loc = name.indexOf('-');\n   const field = name.substring(0, loc===-1 ? name.length : loc);\n   const attr = name.substring(loc+1, name.length);\n   return [field, attr];\n};\n\nconst pluralize = (str) => {\n   const last = str[str.length-1];\n   return str.concat(last==='s' || last===')' ? '' : 's');\n};\n\n\nexport default function Input (props) {\n   const {\n      inputs, setInputs, toResults,\n      weight, swapWeight, toAbout,\n      unit, tolbs, tokg } = props;\n\n   const [valid, setValid] = useState(true);\n   const [avg, setAvg] = useState(true);\n   const [boxes, setBoxes] = useState(false);\n   const [store, setStore] = useState('');\n\n   const theme = useContext(ThemeContext);\n\n\n   const fieldFocus = ({target}) => { //clear default\n      setValid(true);\n      const [field, attr] = parseTarget(target);\n      const fieldVal = inputs[field][attr];\n\n      if (!fieldVal.value || !fieldVal.default)\n         return;\n\n      setStore(fieldVal.value);\n      setInputs({type: attr, field, value: ''});\n   };\n\n   const fieldBlur = ({target}) => {\n      if (store && !target.value) {\n         const [field, attr] = parseTarget(target);\n         setInputs({\n            type: attr, field, \n            value: store, default: true\n         });\n      }\n      setStore('');\n   };\n\n   const handleChange = ({target}) => {\n      if (!checkPos(target.value))\n         return;\n\n      const [field, attr] = parseTarget(target);\n\n      if (attr!=='weight' && !checkInt(target.value))\n         return; //extra check\n\n      setInputs({type: attr, field, value: target.value});\n   };\n\n   const submitInput = (event) => {\n      event.preventDefault();\n      const allBlank = fieldNames.every(field => {\n         const amount = inputs[field].amount;\n         return !(amount && amount>0);\n      });\n\n      const allWeights = fieldNames.reduce((res, field) => {\n         const weight = inputs[field].weight.value;\n         return res && Boolean(weight) && weight>0;\n      }, true);\n\n      if (allBlank || !allWeights)\n         setValid(false);\n      else \n         toResults();\n   }\n\n   const resetInput = () => {\n      setValid(true);\n      setInputs({type: 'reset', value: unit.convert});\n   }\n\n   const toggleAvg = () => {\n      setValid(true);\n      setAvg(avg => !avg);\n   }\n\n   const toggleBox = () => {\n      setValid(true);\n      setBoxes(box => !box);\n   }\n\n   return <>\n      <section className=\"sidebar\">\n\n         <div className=\"button-group\">\n            <button type=\"button\" onClick={toAbout}>\n               About</button>\n            <button className={avg ? \" active\" : \"\"} type=\"button\" onClick={toggleAvg}>\n               Set Avg. Weight</button>\n            <button className={boxes ? \" active\" : \"\"} type=\"button\" onClick={toggleBox}>\n               # of Containers</button>\n         </div>\n\n         <div className=\"button-group\">\n            <button className={weight ? \" active\" : \"\"}\n               type=\"button\" onClick={swapWeight}>\n               By Total Weight</button>\n            <button className={unit.name==='kg' ? \"active\" : \"\"}\n               disabled={!weight && !avg} type=\"button\" onClick={tokg}>\n               kg</button>\n            <button className={unit.name==='lbs' ? \"active\" : \"\"}\n               disabled={!weight && !avg} type=\"button\" onClick={tolbs}>\n               lbs</button>\n         </div>\n         \n      </section>\n\n      <section className=\"main\">\n         <h1>Find Out Material Yields</h1>\n         <p>Enter in any electronic, and we'll breakdown what it's made of.</p>\n         <p>Click the \"About\" button for more help on how to use the calculator.</p>\n\n         <form id=\"calc-input\" onSubmit={submitInput} noValidate>\n            {fieldNames.map((field, i) =>\n               <MaterialField key={field+i}\n                  name={field} value={inputs[field]}\n                  weight={weight} avg={avg} boxes={boxes}\n                  theme={theme} unit={unit.name}\n                  onChange={handleChange}\n                  onFocus={fieldFocus} onBlur={fieldBlur}\n               />\n            )}\n         </form>\n\n         <div className=\"submit\">\n            <div className=\"buttons\">\n               <input className=\"button\" type=\"submit\" form=\"calc-input\" value=\"Calculate\"/>\n               <input className=\"button\" type=\"button\" onClick={resetInput} value=\"Reset\"/>\n            </div>\n            {!valid && <span className=\"error\">\n               Require at least one \"Total\" field and all \"Average Weight\" fields not zero\n            </span>}\n         </div>\n      </section>\n   </>;\n};\n\n\nconst MaterialField = (props) => {\n   const {\n      name, value, unit, weight, avg, boxes, ...textProps} = props;\n   const {\n      amount, weight: {value: weightVal}, boxes: {value: boxVal}} = value;\n\n   return (\n      <div className=\"fields\">\n\n         <TextField name={`${name}-amount`} value={amount} show={true} {...textProps}>\n            Total {pluralize(name)}\n            <TransSpan classNames=\"fade\">{weight && ` (${unit})`}</TransSpan>\n         </TextField>\n\n         <div className=\"subfields\">\n\n            <TextField name={`${name}-weight`} value={weightVal}\n               show={avg} subfield {...textProps}>\n               Average Weight <TransSpan classNames=\"fade\">({unit})</TransSpan>\n            </TextField>\n\n            <TextField name={`${name}-boxes`} value={boxVal}\n               show={boxes} subfield {...textProps}>\n               Numbers Per Container\n            </TextField>\n            \n         </div>\n      </div>\n   );\n};\n\n//border color not inheriting\nconst TextField = ({show, name, subfield, theme, children, ...input}) =>  (\n   <TransWrap key={name} in={show} classNames=\"fade\"\n      divClass={`text-container ${subfield ? \"subfield\" : \"\"}`}>\n      <label>\n         {children}\n         <input type=\"tel\" className=\"textfield\" name={name} {...input} \n            style={{borderColor: theme.off}}/>\n      </label>\n   </TransWrap>\n);\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Pie } from '@nivo/pie';\nimport { isMobile } from 'react-device-detect';\n\nimport ThemeContext from '../../contexts/ThemeContext';\nimport { aggregates } from '../pages/Calculator';\nimport '../../App.css';\n\nimport emissionData from '../../data/ghg-info.json';\nimport truck from '../../img/truck.gif';\nimport trash from '../../img/trash.gif';\nimport goldBars from '../../img/gold.gif';\n\n\nconst prettyNum = (num, fracDigits=4) =>\n   num.toLocaleString(undefined, {maximumFractionDigits: fracDigits});\n\n\nconst fetchGold = async () => {\n   const goldUrl = 'https://www.kitco.com/gold-price-today-usa/';\n\n   const data = await fetch(\"https://cors-anywhere.herokuapp.com/\" + goldUrl)\n      .then(response => response.text());\n\n   const parse = new DOMParser();\n   const doc = parse.parseFromString(data, 'text/html');\n\n   const table = [...doc.getElementsByTagName('table')]\n      .filter(table => \n         table.tBodies.item(0).innerText.includes('Gold Spot Price'))[0];\n\n   const price = [...table.tBodies.item(0).rows]\n      .filter(row => row.cells.item(0).innerText.includes('kilo'))[0]\n      .cells.item(1).innerText;\n\n   console.log(`got price ${price}`);\n   return parseFloat(price.replace(',', ''));\n}\n\nconst currPieSize = () => ({\n   width: isMobile ? window.innerWidth*0.85 : window.innerWidth*0.2 + 200,\n   height: window.innerHeight * 0.4\n});\n\n\nexport default function Results (props) {\n   const {\n      unit, tolbs, tokg, \n      toAbout, toBack, values } = props;\n\n   // Units default to kg\n   const [gold, setGold] = useState({price: 55006.71, default: true}); //usd per kilo, 6/15/2020\n   const [pieSize, setSize] = useState(currPieSize);\n\n   const theme = useContext(ThemeContext);\n\n   useEffect(() => {\n      if (gold.default)\n         fetchGold()\n            .then(price => setGold(state => ({...state, price})))\n            .catch(console.log)\n            .finally(() => setGold(state => ({...state, default: false}) ));\n   }, [gold.default]);\n\n   useEffect(() => {\n      const resizePie = () => setSize(currPieSize);\n      window.addEventListener('resize', resizePie);\n\n      return () => {\n         window.removeEventListener('resize', resizePie);\n      }\n   }, [setSize]);\n   \n\n   const colors = ['#444444', '#FFC300', '#FF5733', '#C70039', '#900C3F',\n      '#1A08FF', '#83FF0C','#000000', '#00ECFF', '#201015', '#581845'];\n\n   const pieData = Object.entries(values)\n      .filter(([name, _]) => !aggregates.includes(name))\n      .map(([name, value], index) => ({\n            id: name,\n            label: name, \n            value: value * unit.convert, \n            color: colors[index]\n      }));\n\n   const [ghg, inTotal] = aggregates;\n\n   const trucks = values[inTotal] / emissionData.trucks;\n   const diverts = values[inTotal] / emissionData.divert;\n   const LaNyTrips = values[ghg]  / emissionData.co2LANY;\n\n   return <>\n      <section className=\"sidebar\">\n         <div className=\"button-group\">\n            <button type=\"button\" onClick={toAbout}>\n               About</button>\n            <button className={unit.name==='kg' ? \"active\" : \"\"}\n               type=\"button\" onClick={tokg}>\n               kg</button>\n            <button className={unit.name==='lbs' ? \"active\" : \"\"}\n               type=\"button\" onClick={tolbs}>\n               lbs</button>\n         </div>\n      </section>\n\n      <section className=\"main\">\n         <h1>Total Material Yields</h1>\n\n         <div className=\"outputs\"> \n\n            <section>\n               <h2>By the Numbers</h2>\n               <table>\n                  <thead>\n                     <tr>\n                        <th className=\"output\">Material</th>\n                        <th className=\"output\">Amount Yield ({unit.name})</th>\n                     </tr>\n                  </thead>\n\n                  <tbody>\n                     {Object.entries(values).map(([name, value], i) =>\n                        <tr key={name+i} \n                           style={{backgroundColor: i%2===0 ? theme.mainAlt : theme.main}}\n                        >\n                           <td className=\"output\">{name} </td>\n                           <td className=\"output-value\">{prettyNum(value * unit.convert)} {unit.name} </td>\n                        </tr>\n                     )}\n                  </tbody>\n               </table>\n            </section>\n\n            <div className=\"infos\">\n               {trucks > 1 && <section className=\"info-stat\">\n                  <img alt=\"truck-gif\"src={truck}/>\n                  <p>\n                     <span className=\"show-num\">{prettyNum(values[inTotal])} {unit.name}</span> is enough e-waste to fill \n                     <span className=\"show-num\"> {prettyNum(trucks, 2)} semi-trucks!</span>\n                  </p>\n               </section>}\n\n               <section className=\"info-stat\">\n                  <img alt=\"factory\" src={trash}/>\n                  <p>\n                     Diverts <span className=\"show-num\">{prettyNum(diverts, 0)} {unit.name} </span>\n                     of valuable and toxic materials from landfills!\n                  </p>\n               </section>\n\n               <section className=\"info-stat\">\n                  <img alt=\"driving\" src=\"https://acegif.com/wp-content/gifs/car-driving-7.gif\"/>\n                  <p>\n                     The greenhouse gas emissions is as much gas used in \n                     <span className=\"show-num\"> {prettyNum(LaNyTrips, 0)}</span> car trips between \n                     New York and Los Angeles!\n                  </p>\n               </section>\n\n               <section className=\"info-stat\">\n                  <img alt=\"gold-bars\" src={goldBars}/>\n                  <p>\n                     The total gold currently worth around <span className=\"show-num\">${prettyNum(values.Gold * gold.price, 2)}</span>\n                  </p>\n               </section>\n            </div>\n\n            <section>\n               <h2>Output Material Breakdown</h2>\n               <Pie\n                  data={pieData}\n                  margin={isMobile\n                     ? { top: 15, right: 80, bottom: 30, left: 70 }\n                     : { top: 25, right: 150, bottom: 30, left: 80 }}\n                  width={pieSize.width}\n                  height={pieSize.height}\n                  colors={{ scheme: 'paired'}}\n                  startAngle={-180}\n                  endAngle={360}\n                  innerRadius={0.5}\n                  padAngle={0.7}\n                  cornerRadius={5}\n                  radialLabelsSkipAngle={isMobile ? 10 : 5}\n                  radialLabelsTextXOffset={0}\n                  radialLabelsTextColor={theme.off}\n                  radialLabelsLinkOffset={0}\n                  radialLabelsLinkDiagonalLength={16}\n                  radialLabelsLinkHorizontalLength={24}\n                  radialLabelsLinkStrokeWidth={1}\n                  slicesLabelsSkipAngle={360}\n                  animate={true}\n                  motionStiffness={90}\n                  motionDamping={15}\n                  sortByValue={true}\n                  legends={isMobile ? undefined : [\n                     {\n                        anchor: 'right',\n                        direction: 'column',\n                        translateX: 110,\n                        itemWidth: 60,\n                        itemHeight: 16,\n                        itemsSpacing: 2,\n                        itemTextColor: theme.off,\n                        symbolSize: 14,\n                        symbolShape: 'circle'\n                     }\n                  ]}\n                  tooltip={({ id, value }) => (\n                     <strong>\n                        {id} : {value.toFixed(4)} {unit.name}\n                     </strong>\n                  )}\n                  theme={{\n                     tooltip: {\n                        container: {\n                           background: theme.main,\n                           color: theme.off\n                        },\n\n                     },\n                  }}\n               />\n            </section>\n         </div>\n\n         <div className=\"buttons\">\n            <button type=\"button\" onClick={toBack}>Back</button>\n         </div>\n      </section>\n   </>;\n};\n","import React from 'react';\nimport '../../App.css';\n\nconst About = ({calc}) => <>\n   <section className=\"sidebar\">\n      <div className=\"button-group\">\n         <button type=\"button\" onClick={calc}>Calculator</button>\n      </div>\n   </section>\n   \n   <section className=\"main\">\n      <h1>About the Calculator</h1>\n      <p>\n         Welcome to the e-Stewards Global Impact Calculator. This tool is designed to estimate\n         the environmental benefits of recycling your electronic waste with e-Stewards Certified Recyclers.\n      </p>\n\n      <section>\n         <h2>Usage</h2>\n         <p>\n            By default, you enter in the the total of individual electronics.\n            Clicking \"By Total Weight\" you can choose to enter the total weight\n            of each of the electronics\n         </p>\n         <p>\n            \"Set Avg. Weight\" brings out a new field where you enter the \n            average weight of each of the electronics. \"# of Containers\" also \n            brings out a new field where you enter the number of that electronic\n            can fit into a specific container.\n         </p>\n      </section>\n\n      <section>\n         <h2>Default Values</h2>   \n         <p> \n            Based on averaged data, the default input of unit weights and compositions are automatically input into the calculator. \n            The user can edit this number to tailor their specific electronics along with the unit values of weight or unit count. \n            The calculator will output the yield of recoverable material and the greenhouse gas savings made by the recovery. \n            Charts will be output to motivate the representative numbers. Alternatively, there is also a greenhouse gas savings yield value that represents the savings made by refurbishing the electronics. \n            Refurbishment and recovery are mutually exclusive results.\n\n            E-stewards ensures that all data within electronics is properly destroyed. \n         </p>\n      \n      </section>\n\n      <section>\n         <h2>Background</h2>\n         <p> \n            Due to the accelerating nature of technological advancement, any calculations made on the calculator are averages and approximations. \n            This takes into account of the varying sizes and compositions of technologies such as flat panel TVs and smartphones. \n            Some electronics may contain proprietary material and losses may happen during recovery. </p>\n\n         <p> For more information, sources used to develop the calculations can be found <a href=\"https://docs.google.com/spreadsheets/d/1ObHDmde5JPeCf04jsK3n6PvsbKxdmbop/edit#gid=993306743 \">here</a>. </p>\n\n         <h3>The environmental benefits are measured in three critical areas:</h3>\n         <ol>\n            <li>Green house gas avoidance</li>\n            <li>Toxic metals diverted from export, dumping or disposal</li>\n            <li>Valuable metals diverted from landfill or disposal</li>\n         </ol>\n         <p>These figures can be used to demonstrate and measure individual or corporate responsibility</p>\n      </section>\n      \n   </section>\n</>;\n\n export default React.memo(About);","import React, { useState, useReducer, useEffect, useRef } from 'react';\n\nimport { FadeWrap } from '../utils/Transitions';\nimport { ContentWrap } from '../utils/Styles';\nimport { convertObj } from '../utils/UnitConvert';\n\nimport Input from '../calc/Input';\nimport Results from '../calc/Results';\nimport About from '../calc/About';\n\nimport recycle from '../../data/recycle-info.json';\nimport emissionData from '../../data/ghg-info.json';\nimport '../../App.css';\n\n\nexport default function Calculator() {\n   const [flags, setFlags] = useState({ about: false, enter: false, weight: false });\n   const [unit, setUnit] = useState( convertObj('kg') );\n   const [inputs, setInputs] = useReducer(setField, undefined, fieldStarts);\n   const [results, setResults] = useState( {} );\n   \n   const defCheck = useRef();\n\n\n   const tolbs = () => setUnit(convertObj('lbs'));\n   const tokg = () => setUnit(convertObj('kg'));\n\n   const toResults = () => {\n      setResults(findTotals(inputs, unit.convert, flags.weight));\n      setFlags(flags => ({...flags, enter: true}));\n   };\n\n   const toBack = () => \n      setFlags(flags => ({...flags, enter: false}))\n\n   const swapWeight = () => \n      setFlags(flags => ({...flags, weight: !flags.weight}))\n\n   const onAbout = () => \n      setFlags(flags => ({...flags, about: !flags.about}));\n\n\n   //remove dependency on inputs\n   useEffect(() => {\n      defCheck.current = () => (\n         Object.entries(inputs).reduce((accumObj, [field, fieldObj]) => (\n            {...accumObj, [field]: fieldObj.weight}  \n         ), {})\n      );\n   }, [inputs]);\n\n   //update default weight values when unit changed\n   useEffect(() => {\n      const defaults = defCheck.current();\n      recycle.data.forEach(data => {\n         const field = data.title;\n         const weight = defaults[field];\n\n         if (weight.value && weight.default)\n            setInputs({\n               type: 'weight', \n               field, \n               value: data.weight*unit.convert,\n               default: true\n            });\n      });\n   }, [unit]);\n\n   const {about, enter, weight} = flags;\n\n   return (\n      <>\n         <FadeWrap in={about}>\n            <ContentWrap>\n               <About calc={onAbout}/>\n            </ContentWrap>\n         </FadeWrap>\n\n         <FadeWrap in={!about && !enter}>\n            <ContentWrap>\n               <Input inputs={inputs} setInputs={setInputs}\n                  unit={unit} tolbs={tolbs} tokg={tokg} \n                  weight={weight} swapWeight={swapWeight}\n                  toAbout={onAbout}\n                  toResults={toResults}\n               />\n            </ContentWrap>\n         </FadeWrap>\n\n         <FadeWrap in={!about && enter}>\n            <ContentWrap>\n               <Results values={results} \n                  unit={unit} tolbs={tolbs} tokg={tokg} \n                  toAbout={onAbout}\n                  toBack={toBack}\n               />\n            </ContentWrap>\n         </FadeWrap>\n      </>\n   );\n}\n\nexport const fieldNames = recycle.data.map(data => data.title);\nexport const aggregates = [\"GHG Emissions\", \"Total Input\", \"Total Output\"];\n\nconst fieldStarts = (convert=1) => (\n   recycle.data.reduce((obj, data) => ({\n      ...obj, [data.title]: {\n         amount: '',\n         boxes: {\n            default: true,\n            value: '1'\n         },\n         weight: {\n            default: true,\n            value: data.weight ? data.weight*convert : ''\n         }\n      }\n   }), {})\n);\n\n\nconst setField = (inputs, action) => {\n   switch(action.type) {\n      case 'reset':\n         return action.value\n            ? fieldStarts(action.value)\n            : fieldStarts();\n\n      case 'amount':\n         const aObj = inputs[action.field];\n         aObj[action.type] = action.value;\n         return {...inputs, [action.field]: aObj};\n\n      case 'boxes':\n      case 'weight':\n         const obj = inputs[action.field];\n         obj[action.type].value = action.value;\n         obj[action.type].default = action.default;\n         return {...inputs, [action.field]: obj};\n\n      default:\n         throw new Error();\n   }\n}\n\n\nconst findTotals = (inputs, convert, weightAmount=false) => {\n   const [ghg, inTotals, outTotals] = aggregates;\n   \n   const totals = [...recycle.materials, ...aggregates]\n      .reduce((obj, material) => ({...obj, [material]: 0}), {});\n\n   recycle.data.forEach(data => {\n      const obj = inputs[data.title];\n      const weight = obj.weight.value;\n\n      const amount = weightAmount\n         ? obj.amount / weight\n         : obj.amount;\n\n      const unitRatio =  weight / (convert*data.weight);\n      const materialAmnt = amount * unitRatio * obj.boxes.value;\n\n      recycle.materials.forEach(material => {\n         const weightYield = data[material] * materialAmnt\n         totals[material] += weightYield;\n         totals[outTotals] += weightYield;\n      });\n\n      totals[inTotals] += amount * weight;\n      totals[ghg] += data[ghg] * obj.boxes.value;\n   });\n\n   Object.entries(emissionData.materials).forEach(([material, emission]) => {\n      totals[ghg] += totals[material] * emission * 1000; //convert ton to kg\n   });\n   totals[ghg] *= emissionData.distance; //make from input\n\n   return totals;\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { Route, matchPath, withRouter } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Information from './pages/Info';\nimport Calculator from './pages/Calculator';\nimport FindRecycler from './pages/FindRecycler';\nimport Error from './pages/Error';\n\nimport { TransWrap } from './utils/Transitions';\nimport { siteName } from '../App';\nimport '../App.css';\n\n\nconst Pages = ({location}) => {\n   const linkNames = useMemo(() => {\n      const links = Object.keys(paths);\n      return pathNames()\n         .reduce((obj, name, i) => ({...obj, [links[i]]: name}), {});\n   }, []);\n   \n   const urlPaths = urls();\n\n   //find valid route before for name for title\n   const valid = Object.keys(urlPaths).reduce((match, path) => (\n      match || matchPath(location.pathname, {path, exact: true})\n   ), false);\n\n   const path = valid ? urlPaths[valid.path] : \"/error\";\n   const matchComp = paths[path].Comp;\n\n   useEffect(() => {\n      document.title = `e-Stewards - ${linkNames[path]}`;\n   }, [linkNames, path]);\n\n   return <>\n      {Object.entries(paths).map(( [path, {Comp, trans, rel}] ) => (\n         <Route key={path} exact path={path}>\n            {() => ( //will always render\n               <TransWrap \n                  in={Comp===matchComp} classNames={trans} \n                  divClass={rel ? \"rel\" : \"\"}\n               >\n                  <Comp />\n               </TransWrap>\n            )}\n         </Route>\n      ))}\n   </>;\n};\n\n\nconst paths = {\n   \"/\": {\n      Comp: Home, trans: \"zoom\", rel: true },\n   \"/information\": {\n      Comp: Information, trans: \"fade\", rel: true },\n   \"/calculator\": {\n      Comp: Calculator, trans: \"fade\", rel: true },\n   \"/find-recycler\": {\n      Comp: FindRecycler, trans: \"fade\", rel: false },\n   \"/error\": {\n      Comp: Error, trans: \"fade\", rel: true }\n};\n\nexport const urls = () => (\n   Object.keys(paths)\n      .map(path => [`${siteName}${path}`, path])\n      .reduce((obj, [url, name]) => ({...obj, [url]: name}), {})\n);\n\nexport const pathNames = () => (\n   Object.keys(paths)\n      .map(name => name.replace('/', ''))\n      .map(name => name===\"\" ? \"home\" : name)\n      .map(name => name.replace('-', ' '))\n      .map(name => name.replace(/ ([a-z])/, r => r.toUpperCase()))\n      .map(name => name.replace(/^./, f => f.toUpperCase()))\n);\n\nexport default withRouter(Pages);\n","import React from 'react';\nimport '../../App.css';\nimport Slider from '../slider/Slider';\n \nexport default function Home () {\n   const images = [\n      'https://s3files.core77.com/blog/images/lead_n_spotlight/477276_title__52109_cnNbfrAUP.jpg',\n      'https://icdn2.digitaltrends.com/image/digitaltrends/technological-waste.jpg',\n      'https://www.rd.com/wp-content/uploads/2019/09/mobile-devices.jpg'\n   ]\n\n   return <>\n      <div className=\"slider\">\n         <Slider slides={images} autoPlay={10}/>\n      </div>\n\n      <div className=\"title\">\n         <h1>\n            e-Stewards is the \n            globally responsible way to \n            recycle your electronics.\n         </h1>\n      </div>\n\n      <div className=\"moreinfo\">\n         <div className=\"littlebox\">\n            <h2>FOR ENTERPRISES</h2>\n            <p>\n               Use the highest industry \n               standard for your asset \n               disposition.\n            </p>\n            <a href=\"http://e-stewards.org/learn-more/for-enterprises/\"> Learn More</a>\n         </div>\n\n         <div className=\"littlebox\">\n            <h2>FOR RECYCLERS</h2>\n            <p>\n               Differentiate your business \n               with the e-Stewards Standard.\n            </p>\n            <a href=\"http://e-stewards.org/learn-more/for-recyclers/\"> Learn More</a>\n         </div>\n\n         <div className=\"littlebox\">\n            <h2>FOR CONSUMERS</h2>\n            <p>\n               Join us today in creating a \n               cleaner, more just world. \n            </p>\n            <a href=\"http://e-stewards.org/learn-more/for-consumers/\"> Learn More</a>\n         </div>\n      </div>\n         \n   </>;\n}","import React, { useState, useCallback, useRef } from 'react';\nimport {GoogleMap, useLoadScript, Marker, InfoWindow, MarkerClusterer } from '@react-google-maps/api';\nimport '../../App.css';\nimport locationData from '../../data/location-info.json'\n\nexport default function FindRecycler() {\n\n  const {isLoaded, loadError} = useLoadScript({\n    googleMapsApiKey: \"AIzaSyA-U9tVnswDVHRfHH3DLhc-Y8HWFksQyNQ\"\n  });\n\n  const [selected, setSelected] = useState(null);\n  const onMap = useRef();\n  const onMapLoad = useCallback((map) => {\n    onMap.current = map;\n  }, [])\n\n  if (loadError) return \"Error Loading Maps\";\n  if (!isLoaded) return \"Loading Maps\";\n\n  return <>\n    <GoogleMap \n      mapContainerClassName=\"map\"\n      zoom={10} \n      center={{lat: 41.878113, lng: -87.629799}}\n      onLoad={onMapLoad}\n    >\n      <MarkerClusterer \n        options={ \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\" }\n      >\n        {clusterer =>\n          locationData.map(RecycleCenter => (\n            <Marker\n              key={RecycleCenter.id}\n              position={{\n                lat: RecycleCenter.location[0],\n                lng: RecycleCenter.location[1]\n              }}\n\n              clusterer={clusterer}\n\n              onClick={() => {\n                setSelected(RecycleCenter);\n              }}\n              icon={{\n                url: '/icon16.png',\n                scaledSize: new window.google.maps.Size(30,30)\n              }}\n            />\n          ))\n        }\n      </MarkerClusterer>\n\n      {selected && (\n        <InfoWindow \n          position={{\n            lat: selected.location[0],\n            lng: selected.location[1]\n          }}\n          onCloseClick={() => {\n            setSelected(null);\n          }}\n        >\n          <div>\n            <h2> { selected.name } </h2>\n            <h3> { selected.subname } </h3>\n            <p> Phone: { selected.phone } </p>\n            <a href={selected.directions} target=\"_blank\" rel=\"noopener noreferrer\">Get Directions</a>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n    \n    <form >\n      <input \n        type=\"text\" \n        className=\"search\"\n      />\n    </form>\n    \n  </>\n  \n}","import React from 'react';\nimport { ContentWrap } from '../utils/Styles'\nimport '../../App.css';\n \nexport default function Error() {\n   return (\n      <ContentWrap>\n         <section className=\"main\">\n            <h1>Error: Page does not exist!</h1>\n         </section>\n      </ContentWrap>\n   );\n}","import React, { useRef, useEffect, useMemo, forwardRef, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\n\nimport ThemeContext from '../contexts/ThemeContext';\nimport Burger from './buttons/Burger';\nimport { pathNames, urls } from './Pages';\n\nimport sunLogo from '../img/sun-solid.svg'\nimport moonLogo from '../img/moon-regular.svg'\nimport logo from '../img/e-stewards.png'\nimport '../App.css';\n\n\nconst Navigation = forwardRef(({hide, setNav, swapTheme}, ref) => {\n\n   const linkInfos = useMemo(() => {\n      const names = pathNames();\n      return Object.entries(urls())\n         .filter( ([_, name]) => name!==\"/error\")\n         .map( ([url, _], i) => [url, names[i]]);\n   }, []);\n\n   const navRef = useRef();\n   const menuRef = useRef(); //sliding ref and the burger button group\n   const closeRef = useRef(); //for dependency\n\n   const theme = useContext(ThemeContext);\n   \n   useEffect(() => {\n      if (isMobile) //only check once\n         navRef.current.classList.add('mobile');\n      else\n         navRef.current.classList.remove('mobile');\n\n      const scrollCheck = () => {\n         const distanceY = window.pageYOffset || document.documentElement.scrollTop;\n         const shrinkOn = window.innerHeight * 0.02;\n         \n         if (distanceY > shrinkOn || isMobile)\n            navRef.current.classList.add(\"smaller\");\n         else\n            navRef.current.classList.remove(\"smaller\");\n      }\n\n      window.addEventListener('scroll', scrollCheck);\n\n      return () => {\n         window.removeEventListener('scroll', scrollCheck);\n      }\n   }, []);\n\n\n   //remove dependency for another effect, so don't have\n   //to add and remove event listener\n   useEffect(() => {\n      closeRef.current = () => setNav('close');\n   });\n\n   useEffect(() => {\n      const menuClick = (( {target} ) => {\n         if (!menuRef.current.contains(target) || target.className.includes('nav-link'))\n            closeRef.current();\n      });\n\n      if (isMobile)\n         window.addEventListener('click', menuClick);\n\n      return () => {\n         if (isMobile)\n            window.removeEventListener('click', menuClick);\n      };\n   }, []);\n\n   const isDark = theme.name===\"dark\";\n   const isLight = !isDark;\n\n   return ( \n      <div className=\"nav\" ref={navRef} style={{backgroundColor: theme.mainAlt}}>\n         \n         <div className=\"logoBtn\" \n            style={{backgroundColor: isLight ? \"transparent\" : theme.offAlt}}\n         >\n            <NavLink className=\"nav-link\" exact to=\"/\">\n               <img className=\"logo\" src={logo} alt=\"logo\"/>\n            </NavLink>\n         </div>\n         \n         <div ref={menuRef} className=\"nav-menu\">\n            <div ref={ref} className={`nav-list ${hide ? \"hide\" : \"\"}`}\n               style={{backgroundColor: theme.mainAlt}}\n            >\n               {linkInfos.map(([path, name], i) => (\n                  <NavLink key={path+i} className=\"nav-link\" exact to={path}>{name}</NavLink>\n               ))}\n\n               <div className=\"nav-link theme-link\" onClick={swapTheme}>\n                  {!isLight && <img className=\"theme-logo\" src={sunLogo} alt=\"Light Mode\"/>}\n                  {!isDark && <img className=\"theme-logo\" src={moonLogo} alt=\"Dark Mode\"/>}\n               </div>\n            </div>\n\n            {isMobile && <Burger onClick={() => setNav('swap')} active={!hide} color={theme.offAlt}/>}\n         </div>\n      </div>\n   );\n});\n\nexport default Navigation;\n","import React, { useRef, useReducer, useEffect } from 'react';\nimport { useSwipeable } from 'react-swipeable'\nimport { BrowserRouter } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\n\nimport ThemeContext, { toggleTheme, lightTheme } from './contexts/ThemeContext';\nimport NavContext, { navChange, navStart }from './contexts/NavContext';\nimport Navigation from './components/Navigation';\nimport Pages from './components/Pages';\n\nimport mainInfo from '../package.json';\nimport './App.css';\n\n\nexport default function App() {\n  const [theme, swapTheme] = useReducer(toggleTheme, lightTheme);\n  const [navInfo, setNavBase] = useReducer(navChange, navStart(isMobile)); // hide if mobile\n  const listRef = useRef(); //the sliding nav elem\n\n\n  const setNav = (type) =>\n    setNavBase({type, menu: listRef.current});\n\n  const pullMenu = ({initial}) => {\n    if (navInfo.hide && initial[0] >= navInfo.area)\n      setNav('open');\n  }\n\n  const hideMenu = ({initial, deltaX}) => {\n    const currX = initial[0] - deltaX;\n    if (!navInfo.hide && currX >= navInfo.area)\n      setNav('close');\n  }\n\n  const swipeCheck = ({event, dir}) => {\n    if (listRef.current.contains(event.target)) {\n      if (event.cancelable)\n        event.preventDefault();\n\n    } else if (!navInfo.hide && (dir==='Up' || dir==='Down'))\n      setNav('close');\n  }\n\n  const swipes = useSwipeable({\n    onSwipedLeft: pullMenu,\n    onSwipedRight: hideMenu,\n    onSwiping: swipeCheck\n  });\n\n  useEffect(() => {\n    const body = document.body;\n    body.style.backgroundColor = theme.main;\n    body.style.color = theme.off;\n  }, [theme]);\n\n\n  return (\n    <div {...swipes}>\n      <BrowserRouter>\n        <ThemeContext.Provider value={theme}>\n          <Navigation ref={listRef} \n            hide={navInfo.hide} setNav={setNav} swapTheme={swapTheme}/>\n        \n          <NavContext.Provider value={navInfo}>\n            <Pages />\n          </NavContext.Provider>\n\n        </ThemeContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport const siteName = mainInfo.homepage\n  .replace('https://dserapio.github.io', '')\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}